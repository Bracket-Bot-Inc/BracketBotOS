#!/usr/bin/env python3
import sys
import time
from pathlib import Path

# Add the project root to path so we can import bbos
script_dir = Path(__file__).parent.parent.absolute()
sys.path.insert(0, str(script_dir))

from bbos.app_manager import AppManager

def find_autostart_apps(apps_directories):
    """Find all apps marked with #AUTO comment across multiple directories"""
    autostart_apps = []
    
    for apps_path in apps_directories:
        apps_path = Path(apps_path)
        
        if not apps_path.exists():
            print(f"[autostart] Apps directory not found: {apps_path}")
            continue
        
        print(f"[autostart] Scanning directory: {apps_path}")
        
        # Check for .py files
        for app_file in apps_path.glob("*.py"):
            with open(app_file, 'r') as f:
                # Check first few lines for #AUTO
                for i, line in enumerate(f):
                    if i > 10:  # Only check first 10 lines
                        break
                    line_stripped = line.strip()
                    if line_stripped.startswith("#AUTO") or line_stripped.startswith("# AUTO"):
                        autostart_apps.append(app_file.stem)
                        print(f"[autostart] Found autostart app: {app_file.stem} in {apps_path}")
                        break
        
        # Check for folders with main.py
        for folder in apps_path.iterdir():
            if folder.is_dir():
                main_file = folder / "main.py"
                if main_file.exists():
                    with open(main_file, 'r') as f:
                        # Check first few lines for #AUTO
                        for i, line in enumerate(f):
                            if i > 10:  # Only check first 10 lines
                                break
                            line_stripped = line.strip()
                            if line_stripped.startswith("#AUTO") or line_stripped.startswith("# AUTO"):
                                autostart_apps.append(folder.name)
                                print(f"[autostart] Found autostart app: {folder.name} in {apps_path}")
                                break
    return autostart_apps

def main(app_manager):
    if len(sys.argv) < 2:
        print("[autostart] Usage: autostart <directory1> [directory2] [directory3] ...")
        print("[autostart] No app directories provided")
        return
    
    apps_directories = sys.argv[1:]
    
    print(f"[autostart] BracketBot autostart service starting...")
    print(f"[autostart] Scanning {len(apps_directories)} directories: {', '.join(apps_directories)}")
    
    # Find apps marked for autostart across all directories
    autostart_apps = find_autostart_apps(apps_directories)
    
    if not autostart_apps:
        print("[autostart] No apps marked for autostart found")
        return
    
    print(f"[autostart] Found {len(autostart_apps)} autostart apps: {', '.join(autostart_apps)}")
    
    # Initialize app manager
    
    # Start each autostart app with some delay between starts
    started_count = 0
    for app_name in autostart_apps:
        print(f"[autostart] Starting {app_name}...")
        success = app_manager.start_app(app_name)
        if success:
            print(f"[autostart] ✓ Started {app_name}")
            started_count += 1
        else:
            print(f"[autostart] ✗ Failed to start {app_name}")
        
        # Small delay between starts to avoid overwhelming the system
        time.sleep(0.5)
    
    print(f"[autostart] Autostart complete: {started_count}/{len(autostart_apps)} apps started successfully")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: autostart [app_dirs]")
        sys.exit(1)
    app_dirs = [Path(p) for p in sys.argv[1:]]
    app_manager = AppManager(app_dirs)
    main(app_manager)
    try:
        while True: 
            time.sleep(1)
    except KeyboardInterrupt:
        print("[autostart] Keyboard interrupt detected. Stopping all apps...")
        app_manager.stop_all_apps()